import ts from "typescript";

// Keywords: numbers 81 - 159 in the SyntaxKind enum
export const KEYWORDS = [
  ts.SyntaxKind.BreakKeyword,
  ts.SyntaxKind.CaseKeyword,
  ts.SyntaxKind.CatchKeyword,
  ts.SyntaxKind.ClassKeyword,
  ts.SyntaxKind.ConstKeyword,
  ts.SyntaxKind.ContinueKeyword,
  ts.SyntaxKind.DebuggerKeyword,
  ts.SyntaxKind.DefaultKeyword,
  ts.SyntaxKind.DeleteKeyword,
  ts.SyntaxKind.DoKeyword,
  ts.SyntaxKind.ElseKeyword,
  ts.SyntaxKind.EnumKeyword,
  ts.SyntaxKind.ExportKeyword,
  ts.SyntaxKind.ExtendsKeyword,
  ts.SyntaxKind.FalseKeyword,
  ts.SyntaxKind.FinallyKeyword,
  ts.SyntaxKind.ForKeyword,
  ts.SyntaxKind.FunctionKeyword,
  ts.SyntaxKind.IfKeyword,
  ts.SyntaxKind.ImportKeyword,
  ts.SyntaxKind.InKeyword,
  ts.SyntaxKind.InstanceOfKeyword,
  ts.SyntaxKind.NewKeyword,
  ts.SyntaxKind.NullKeyword,
  ts.SyntaxKind.ReturnKeyword,
  ts.SyntaxKind.SuperKeyword,
  ts.SyntaxKind.SwitchKeyword,
  ts.SyntaxKind.ThisKeyword,
  ts.SyntaxKind.ThrowKeyword,
  ts.SyntaxKind.TrueKeyword,
  ts.SyntaxKind.TryKeyword,
  ts.SyntaxKind.TypeOfKeyword,
  ts.SyntaxKind.VarKeyword,
  ts.SyntaxKind.VoidKeyword,
  ts.SyntaxKind.WhileKeyword,
  ts.SyntaxKind.WithKeyword,
  ts.SyntaxKind.ImplementsKeyword,
  ts.SyntaxKind.InterfaceKeyword,
  ts.SyntaxKind.LetKeyword,
  ts.SyntaxKind.PackageKeyword,
  ts.SyntaxKind.PrivateKeyword,
  ts.SyntaxKind.ProtectedKeyword,
  ts.SyntaxKind.PublicKeyword,
  ts.SyntaxKind.StaticKeyword,
  ts.SyntaxKind.YieldKeyword,
  ts.SyntaxKind.AbstractKeyword,
  ts.SyntaxKind.AsKeyword,
  ts.SyntaxKind.AssertsKeyword,
  ts.SyntaxKind.AssertKeyword,
  ts.SyntaxKind.AnyKeyword,
  ts.SyntaxKind.AsyncKeyword,
  ts.SyntaxKind.AwaitKeyword,
  ts.SyntaxKind.BooleanKeyword,
  ts.SyntaxKind.ConstructorKeyword,
  ts.SyntaxKind.DeclareKeyword,
  ts.SyntaxKind.GetKeyword,
  ts.SyntaxKind.InferKeyword,
  ts.SyntaxKind.IntrinsicKeyword,
  ts.SyntaxKind.IsKeyword,
  ts.SyntaxKind.KeyOfKeyword,
  ts.SyntaxKind.ModuleKeyword,
  ts.SyntaxKind.NamespaceKeyword,
  ts.SyntaxKind.NeverKeyword,
  ts.SyntaxKind.ReadonlyKeyword,
  ts.SyntaxKind.RequireKeyword,
  ts.SyntaxKind.NumberKeyword,
  ts.SyntaxKind.ObjectKeyword,
  ts.SyntaxKind.SetKeyword,
  ts.SyntaxKind.StringKeyword,
  ts.SyntaxKind.SymbolKeyword,
  ts.SyntaxKind.TypeKeyword,
  ts.SyntaxKind.UndefinedKeyword,
  ts.SyntaxKind.UniqueKeyword,
  ts.SyntaxKind.UnknownKeyword,
  ts.SyntaxKind.FromKeyword,
  ts.SyntaxKind.GlobalKeyword,
  ts.SyntaxKind.BigIntKeyword,
  ts.SyntaxKind.OverrideKeyword,
  ts.SyntaxKind.OfKeyword,
];

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#keywords
export const RESERVED_KEYWORDS: Array<string> = (
  KEYWORDS.map((keyword) => ts.tokenToString(keyword)).filter(
    (keyword) => keyword != null
  ) as Array<string>
)
  // Future reserved keywords in older standards that are not included above:
  .concat([
    "byte",
    "char",
    "double",
    "final",
    "float",
    "goto",
    "int",
    "long",
    "native",
    "short",
    "synchronized",
    "throws",
    "transient",
    "volatile",
  ]);
